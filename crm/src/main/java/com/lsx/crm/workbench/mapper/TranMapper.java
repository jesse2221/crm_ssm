package com.lsx.crm.workbench.mapper;

import com.lsx.crm.workbench.domain.Clue;
import com.lsx.crm.workbench.domain.Customer;
import com.lsx.crm.workbench.domain.FunnelVo;
import com.lsx.crm.workbench.domain.Tran;

import java.util.List;
import java.util.Map;

public interface TranMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Mon Apr 11 14:46:45 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Mon Apr 11 14:46:45 CST 2022
     */
    int insert(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Mon Apr 11 14:46:45 CST 2022
     */
    int insertSelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Mon Apr 11 14:46:45 CST 2022
     */
    Tran selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Mon Apr 11 14:46:45 CST 2022
     */
    int updateByPrimaryKeySelective(Tran record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran
     *
     * @mbggenerated Mon Apr 11 14:46:45 CST 2022
     */
    int updateByPrimaryKey(Tran record);

    int insertTran(Tran tran);

    Tran selectTranForDetailById(String id);

    /**
     * 查询各个阶段的数据量
     * @return
     */
    List<FunnelVo> selectCountOfTranGroupByStage();

    /**
     * 根据条件查询所有的交易列表
     */
    List<Tran> selectTranByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询符合条件的所有条数
     */
    int selectCountOfTranByCondition(Map<String,Object> map);

    /**
     * 根据id删除符合条件的
     * @param ids
     * @return
     */
    int deleteTranByIds(String[] ids);

    /**
     *  通过Id查询交易详细信息
     * @param id
     * @return
     */
    Tran selectTranById(String id);

    /**
     * 查tran原始数据
     * @param id
     * @return
     */
    Tran selectTranById2(String id);

    /**
     * 市场活动修改功能
     */
    int updateTran(Map<String,Object> map);
}