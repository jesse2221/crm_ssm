package com.lsx.crm.workbench.mapper;

import com.lsx.crm.workbench.domain.Activity;
import com.lsx.crm.workbench.domain.Clue;
import com.lsx.crm.workbench.domain.ClueRemark;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Apr 05 18:29:17 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Apr 05 18:29:17 CST 2022
     */
    int insert(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Apr 05 18:29:17 CST 2022
     */
    int insertSelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Apr 05 18:29:17 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Apr 05 18:29:17 CST 2022
     */
    int updateByPrimaryKeySelective(Clue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbggenerated Tue Apr 05 18:29:17 CST 2022
     */
    int updateByPrimaryKey(Clue record);

    /**
     * 新增clue线索
     */
    int inserClue(Clue clue);

    /**
     * 通过id查询市场活动详细列表
     */
    Clue selectClueForDetailById(String id);

    /**
     *  通过Id查询线索详细信息
     * @param id
     * @return
     */
    Clue selectClueById(String id);

    /**
     * 根据clueId删除线索记录
     * @param id
     * @return
     */
    int deleteClueById(String id);

    /**
     * 根据条件查询所有的线索列表
     */
    List<Clue> selectClueByConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询符合条件的所有条数
     */
    int selectCountOfClueByCondition(Map<String,Object> map);

    /**
     * 根据id删除符合条件的
     * @param ids
     * @return
     */
    int deleteClueByIds(String[] ids);

    /**
     * 市场活动修改功能
     */
    int updateClue(Clue clue);


}